name: Backend CI

on:
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: work-flow-tests
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Install dependencies
        run: go mod download

      - name: Verify server.go exists
        run: |
          ls -la
          if [ -f server.go ]; then echo "server.go exists"; else echo "server.go does not exist!" && exit 1; fi

      - name: Build server
        run: go build -v -o server server.go

      - name: Fetch main branch
        run: git fetch origin main

      - name: Check for changed Go files
        id: check_changes
        run: |
          changed_files=$(git diff --name-only origin/main HEAD | grep '\.go$' || true)
          echo "Changed Go files: $changed_files"
          if [ -z "$changed_files" ]; then
            echo "packages=" >> $GITHUB_OUTPUT
            exit 0
          fi
          packages=$(echo "$changed_files" | xargs -n1 dirname | sort | uniq)
          echo "packages=$packages" >> $GITHUB_OUTPUT
          echo "Packages to test: $packages"

      - name: Test Changed Packages
        if: steps.check_changes.outputs.packages != ''
        env:
          SMTP_PORT: ${{ vars.SMTP_PORT }}
          SMTP_ENDPOINT_ADDRESS: ${{ vars.SMTP_ENDPOINT_ADDRESS }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_TLS_MODE: ${{ vars.SMTP_TLS_MODE }}
          SMTP_TEST_EMAIL: ${{vars.SMTP_TEST_EMAIL}}
          SMTP_FROM: ${{vars.SMTP_FROM}}
        run: |
          for pkg in ${{ steps.check_changes.outputs.packages }}; do
            echo "Running tests in package: $pkg"
            pkg_relative=${pkg#backend/}
            go test -v ./$pkg_relative/...
          done
