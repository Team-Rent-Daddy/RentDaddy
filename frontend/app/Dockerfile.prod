# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Pre-install only what's needed for dependency resolution
COPY package.json package-lock.json ./
RUN npm ci

# Copy all source files after installing dependencies (better Docker caching)
COPY . .

# Set production environment and build
ENV NODE_ENV=production
RUN npm run build

# Serve stage
FROM nginx:alpine AS production

# Add bash and other utilities
RUN apk add --no-cache bash grep findutils

# Copy custom nginx config and entrypoint
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY docker-entrypoint.sh /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh

# Copy the built frontend
COPY --from=builder /app/dist /usr/share/nginx/html

# Make sure entrypoint starts nginx
ENTRYPOINT ["/docker-entrypoint.sh"]
