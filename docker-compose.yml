services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppassword}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/internal/db/schema/tenant.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ENV=${ENV:-development}
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    # UNCOMMENT THIS LATER
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    env_file:
      - .env  # Load .env file
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend/app
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-5173}:${FRONTEND_PORT:-5173}"
    volumes:
      - ./frontend/app:/app
      - /app/node_modules
    networks:
      - app-network
    env_file:
      - .env  # Load .env file

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
